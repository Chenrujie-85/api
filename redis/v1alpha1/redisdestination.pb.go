// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: redis/v1alpha1/redisdestination.proto

// $schema: redis.aeraki.io.v1alpha1.RedisDestination
// $title: Redis Destination
// $description: Configuration affecting auth , discovery_endpoints etc.

// RedisDestination defines policies that apply to redis traffic intended for a redis service

package v1alpha1

import (
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1alpha3 "istio.io/api/networking/v1alpha3"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RedisSettings_Mode int32

const (
	RedisSettings_PROXY   RedisSettings_Mode = 0
	RedisSettings_CLUSTER RedisSettings_Mode = 1
)

// Enum value maps for RedisSettings_Mode.
var (
	RedisSettings_Mode_name = map[int32]string{
		0: "PROXY",
		1: "CLUSTER",
	}
	RedisSettings_Mode_value = map[string]int32{
		"PROXY":   0,
		"CLUSTER": 1,
	}
)

func (x RedisSettings_Mode) Enum() *RedisSettings_Mode {
	p := new(RedisSettings_Mode)
	*p = x
	return p
}

func (x RedisSettings_Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RedisSettings_Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_redis_v1alpha1_redisdestination_proto_enumTypes[0].Descriptor()
}

func (RedisSettings_Mode) Type() protoreflect.EnumType {
	return &file_redis_v1alpha1_redisdestination_proto_enumTypes[0]
}

func (x RedisSettings_Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RedisSettings_Mode.Descriptor instead.
func (RedisSettings_Mode) EnumDescriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{5, 0}
}

// RedisDestination defines policies that apply to redis traffic intended for a redis service
//
// <!-- crd generation tags
// +cue-gen:RedisDestination:groupName:redis.aeraki.io
// +cue-gen:RedisDestination:version:v1alpha1
// +cue-gen:RedisDestination:storageVersion
// +cue-gen:RedisDestination:subresource:status
// +cue-gen:RedisDestination:scope:Namespaced
// +cue-gen:RedisDestination:resource:categories=redis-aeraki-io,shortNames=rd
// +cue-gen:RedisDestination:printerColumn:name=Host,type=string,JSONPath=.spec.host,description="The name of a service from the service registry"
// +cue-gen:RedisDestination:printerColumn:name=Age,type=date,JSONPath=.metadata.creationTimestamp,description="CreationTimestamp is a timestamp
// representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations.
// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
// Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
// +cue-gen:RedisDestination:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=redis.aeraki.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type RedisDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host          string         `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	TrafficPolicy *TrafficPolicy `protobuf:"bytes,2,opt,name=traffic_policy,json=trafficPolicy,proto3" json:"traffic_policy,omitempty"`
}

func (x *RedisDestination) Reset() {
	*x = RedisDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisDestination) ProtoMessage() {}

func (x *RedisDestination) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisDestination.ProtoReflect.Descriptor instead.
func (*RedisDestination) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{0}
}

func (x *RedisDestination) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RedisDestination) GetTrafficPolicy() *TrafficPolicy {
	if x != nil {
		return x.TrafficPolicy
	}
	return nil
}

// Connection pool settings for an upstream host. The settings apply to
// each individual host in the upstream service.
type ConnectionPoolSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcp   *v1alpha3.ConnectionPoolSettings_TCPSettings `protobuf:"bytes,1,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Redis *RedisSettings                               `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
}

func (x *ConnectionPoolSettings) Reset() {
	*x = ConnectionPoolSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionPoolSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionPoolSettings) ProtoMessage() {}

func (x *ConnectionPoolSettings) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionPoolSettings.ProtoReflect.Descriptor instead.
func (*ConnectionPoolSettings) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionPoolSettings) GetTcp() *v1alpha3.ConnectionPoolSettings_TCPSettings {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *ConnectionPoolSettings) GetRedis() *RedisSettings {
	if x != nil {
		return x.Redis
	}
	return nil
}

// Auth provide a way to get redis auth token.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Auth:
	//
	//	*Auth_Secret
	//	*Auth_Plain
	Auth isAuth_Auth `protobuf_oneof:"auth"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{2}
}

func (m *Auth) GetAuth() isAuth_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *Auth) GetSecret() *SecretReference {
	if x, ok := x.GetAuth().(*Auth_Secret); ok {
		return x.Secret
	}
	return nil
}

func (x *Auth) GetPlain() *PlainAuth {
	if x, ok := x.GetAuth().(*Auth_Plain); ok {
		return x.Plain
	}
	return nil
}

type isAuth_Auth interface {
	isAuth_Auth()
}

type Auth_Secret struct {
	// Secret use the k8s secret in current namespace.
	Secret *SecretReference `protobuf:"bytes,1,opt,name=secret,proto3,oneof"`
}

type Auth_Plain struct {
	// redis password.
	Plain *PlainAuth `protobuf:"bytes,2,opt,name=plain,proto3,oneof"`
}

func (*Auth_Secret) isAuth_Auth() {}

func (*Auth_Plain) isAuth_Auth() {}

type SecretReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PasswordField string `protobuf:"bytes,2,opt,name=password_field,json=passwordField,proto3" json:"password_field,omitempty"`
	UsernameField string `protobuf:"bytes,3,opt,name=username_field,json=usernameField,proto3" json:"username_field,omitempty"`
}

func (x *SecretReference) Reset() {
	*x = SecretReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretReference) ProtoMessage() {}

func (x *SecretReference) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretReference.ProtoReflect.Descriptor instead.
func (*SecretReference) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{3}
}

func (x *SecretReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecretReference) GetPasswordField() string {
	if x != nil {
		return x.PasswordField
	}
	return ""
}

func (x *SecretReference) GetUsernameField() string {
	if x != nil {
		return x.UsernameField
	}
	return ""
}

type PlainAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *PlainAuth) Reset() {
	*x = PlainAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlainAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlainAuth) ProtoMessage() {}

func (x *PlainAuth) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlainAuth.ProtoReflect.Descriptor instead.
func (*PlainAuth) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{4}
}

func (x *PlainAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PlainAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RedisSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode               RedisSettings_Mode `protobuf:"varint,1,opt,name=mode,proto3,enum=redis.aeraki.io.v1alpha1.RedisSettings_Mode" json:"mode,omitempty"`
	Auth               *Auth              `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	DiscoveryEndpoints []string           `protobuf:"bytes,3,rep,name=discovery_endpoints,json=discoveryEndpoints,proto3" json:"discovery_endpoints,omitempty"`
}

func (x *RedisSettings) Reset() {
	*x = RedisSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedisSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisSettings) ProtoMessage() {}

func (x *RedisSettings) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisSettings.ProtoReflect.Descriptor instead.
func (*RedisSettings) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{5}
}

func (x *RedisSettings) GetMode() RedisSettings_Mode {
	if x != nil {
		return x.Mode
	}
	return RedisSettings_PROXY
}

func (x *RedisSettings) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RedisSettings) GetDiscoveryEndpoints() []string {
	if x != nil {
		return x.DiscoveryEndpoints
	}
	return nil
}

type TrafficPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionPool *ConnectionPoolSettings `protobuf:"bytes,1,opt,name=connection_pool,json=connectionPool,proto3" json:"connection_pool,omitempty"`
}

func (x *TrafficPolicy) Reset() {
	*x = TrafficPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficPolicy) ProtoMessage() {}

func (x *TrafficPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_redis_v1alpha1_redisdestination_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficPolicy.ProtoReflect.Descriptor instead.
func (*TrafficPolicy) Descriptor() ([]byte, []int) {
	return file_redis_v1alpha1_redisdestination_proto_rawDescGZIP(), []int{6}
}

func (x *TrafficPolicy) GetConnectionPool() *ConnectionPoolSettings {
	if x != nil {
		return x.ConnectionPool
	}
	return nil
}

var File_redis_v1alpha1_redisdestination_proto protoreflect.FileDescriptor

var file_redis_v1alpha1_redisdestination_proto_rawDesc = []byte{
	0x0a, 0x25, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x61,
	0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x37, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x33, 0x2f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x10, 0x52, 0x65, 0x64,
	0x69, 0x73, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x4f, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x2e, 0x54, 0x43, 0x50, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x03,
	0x74, 0x63, 0x70, 0x12, 0x3d, 0x0a, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b,
	0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x64, 0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x43, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x65,
	0x64, 0x69, 0x73, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x3b, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69,
	0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x69, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x42, 0x06, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x73, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x49, 0x0a, 0x09, 0x50, 0x6c,
	0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x61, 0x65,
	0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e,
	0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2f, 0x0a,
	0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x1e,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x22, 0x6a,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x59, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x72, 0x65, 0x64, 0x69, 0x73,
	0x2e, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2e, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x65, 0x72, 0x61, 0x6b, 0x69, 0x2d,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_redis_v1alpha1_redisdestination_proto_rawDescOnce sync.Once
	file_redis_v1alpha1_redisdestination_proto_rawDescData = file_redis_v1alpha1_redisdestination_proto_rawDesc
)

func file_redis_v1alpha1_redisdestination_proto_rawDescGZIP() []byte {
	file_redis_v1alpha1_redisdestination_proto_rawDescOnce.Do(func() {
		file_redis_v1alpha1_redisdestination_proto_rawDescData = protoimpl.X.CompressGZIP(file_redis_v1alpha1_redisdestination_proto_rawDescData)
	})
	return file_redis_v1alpha1_redisdestination_proto_rawDescData
}

var file_redis_v1alpha1_redisdestination_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_redis_v1alpha1_redisdestination_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_redis_v1alpha1_redisdestination_proto_goTypes = []interface{}{
	(RedisSettings_Mode)(0),                             // 0: redis.aeraki.io.v1alpha1.RedisSettings.Mode
	(*RedisDestination)(nil),                            // 1: redis.aeraki.io.v1alpha1.RedisDestination
	(*ConnectionPoolSettings)(nil),                      // 2: redis.aeraki.io.v1alpha1.ConnectionPoolSettings
	(*Auth)(nil),                                        // 3: redis.aeraki.io.v1alpha1.Auth
	(*SecretReference)(nil),                             // 4: redis.aeraki.io.v1alpha1.SecretReference
	(*PlainAuth)(nil),                                   // 5: redis.aeraki.io.v1alpha1.PlainAuth
	(*RedisSettings)(nil),                               // 6: redis.aeraki.io.v1alpha1.RedisSettings
	(*TrafficPolicy)(nil),                               // 7: redis.aeraki.io.v1alpha1.TrafficPolicy
	(*v1alpha3.ConnectionPoolSettings_TCPSettings)(nil), // 8: istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings
}
var file_redis_v1alpha1_redisdestination_proto_depIdxs = []int32{
	7, // 0: redis.aeraki.io.v1alpha1.RedisDestination.traffic_policy:type_name -> redis.aeraki.io.v1alpha1.TrafficPolicy
	8, // 1: redis.aeraki.io.v1alpha1.ConnectionPoolSettings.tcp:type_name -> istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings
	6, // 2: redis.aeraki.io.v1alpha1.ConnectionPoolSettings.redis:type_name -> redis.aeraki.io.v1alpha1.RedisSettings
	4, // 3: redis.aeraki.io.v1alpha1.Auth.secret:type_name -> redis.aeraki.io.v1alpha1.SecretReference
	5, // 4: redis.aeraki.io.v1alpha1.Auth.plain:type_name -> redis.aeraki.io.v1alpha1.PlainAuth
	0, // 5: redis.aeraki.io.v1alpha1.RedisSettings.mode:type_name -> redis.aeraki.io.v1alpha1.RedisSettings.Mode
	3, // 6: redis.aeraki.io.v1alpha1.RedisSettings.auth:type_name -> redis.aeraki.io.v1alpha1.Auth
	2, // 7: redis.aeraki.io.v1alpha1.TrafficPolicy.connection_pool:type_name -> redis.aeraki.io.v1alpha1.ConnectionPoolSettings
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_redis_v1alpha1_redisdestination_proto_init() }
func file_redis_v1alpha1_redisdestination_proto_init() {
	if File_redis_v1alpha1_redisdestination_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_redis_v1alpha1_redisdestination_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionPoolSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlainAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedisSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redis_v1alpha1_redisdestination_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_redis_v1alpha1_redisdestination_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Auth_Secret)(nil),
		(*Auth_Plain)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redis_v1alpha1_redisdestination_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_redis_v1alpha1_redisdestination_proto_goTypes,
		DependencyIndexes: file_redis_v1alpha1_redisdestination_proto_depIdxs,
		EnumInfos:         file_redis_v1alpha1_redisdestination_proto_enumTypes,
		MessageInfos:      file_redis_v1alpha1_redisdestination_proto_msgTypes,
	}.Build()
	File_redis_v1alpha1_redisdestination_proto = out.File
	file_redis_v1alpha1_redisdestination_proto_rawDesc = nil
	file_redis_v1alpha1_redisdestination_proto_goTypes = nil
	file_redis_v1alpha1_redisdestination_proto_depIdxs = nil
}
